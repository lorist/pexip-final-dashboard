server {
  listen 80;
  server_name localhost;

  location / {
    root   /usr/share/nginx/html;
    index  index.html;
    try_files $uri $uri/ /index.html;
  }
  # This new location block creates the reverse proxy
  location /api/ {
    # This is the server your API is actually on
  #   proxy_pass https://conf1.in.pexcompute.com;

  #   # These headers are important for the proxy to work correctly
  #   proxy_set_header Host conf1.in.pexcompute.com;
  #   # proxy_set_header Host $host;
  #   proxy_set_header X-Real-IP $remote_addr;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header X-Forwarded-Proto $scheme;
  #   proxy_buffering off;
  #   proxy_cache off;
  #   proxy_set_header Connection '';
  #   proxy_http_version 1.1;
  #   proxy_redirect off;
  #   proxy_ssl_verify off;
  # }
  proxy_pass https://internal.lorist.org; # Use FQDN as verified by curl

  proxy_set_header Host conf1.in.pexcompute.com; # IMPORTANT: Set the correct Host header
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;

  # These are crucial for proxying POST bodies correctly
  proxy_request_buffering off; # Do not buffer client request body
  proxy_buffering off;         # Do not buffer proxy response

  # Ensure Content-Type and Content-Length are passed (they should be by default, but explicit doesn't hurt)
  proxy_set_header Content-Type $http_content_type; # Use $http_ content_type
  proxy_set_header Content-Length $content_length;  # Use $content_length directly

  # Increase timeouts slightly for API calls if needed (60s is usually fine)
  proxy_connect_timeout 60s;
  proxy_send_timeout 60s;
  proxy_read_timeout 60s;

  # Disable SSL verification for the upstream (ONLY FOR DEV/TRUSTED INTERNAL BACKEND)
  proxy_ssl_verify off; # <--- KEEP THIS FOR LOCAL TESTING, REMOVE FOR PRODUCTION CLOUD

  proxy_cache off;
  proxy_set_header Connection '';
  proxy_http_version 1.1; # Explicitly use HTTP/1.1 to the backend for compatibility
  proxy_redirect off;

  # Potentially needed for CORS preflight (OPTIONS requests)
  # If your browser sends OPTIONS, Nginx must respond appropriately
  # If the API endpoint itself handles CORS, this might not be needed.
  # But if not, Nginx needs to step in.
  # This is a general example for allowing all CORS for API. Be more restrictive in production.
  if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:8080'; # Be specific here for dev
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,pin,token'; # Include custom headers
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }
    add_header 'Access-Control-Allow-Origin' 'http://localhost:8080'; # For actual requests
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE'; # Add allowed methods
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,pin,token'; # Include custom headers

  }
}
# upgrade-insecure-requests; default-src 'self'; frame-src 'self' https://telemetryservice.firstpartyapps.oaspapps.com/telemetryservice/telemetryproxy.html https://*.microsoft.com https://*.office.com https://cdn.pexip.com/guff/ http://localhost:5173 https://localhost:5173 https://open.rocket.chat; style-src 'self' 'unsafe-inline' https://*.microsoft.com https://*.office.com; object-src 'self'; font-src 'self' https://*.microsoft.com https://*.office.com; img-src 'self' https://www.adobe.com data: blob:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.microsoft.com https://*.office.com https://ajax.aspnetcdn.com https://api.keen.io https://secure.quickchannel.com; media-src 'self' blob:; connect-src 'self' https://*.microsoft.com https://*.office.com https://example.com wss://127.0.0.1:9002 https://secure.quickchannel.com https://*.vbrick.com wss://api.pexip.tech ws://localhost:3000 https://localhost:3000 https://www.googleapis.com https://cklabubuntu01.ck-collab-engtest.com http://localhost:8080; frame-ancestors 'self';